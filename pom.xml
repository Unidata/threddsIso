<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>EDS</groupId>
  <artifactId>threddsIso</artifactId>
  <packaging>jar</packaging>
  <version>2.3</version>
  <repositories>

    <repository>
      <id>ibiblio-mirror</id>
      <url>http://mirrors.ibiblio.org/pub/mirrors/maven2</url>
    </repository>

  </repositories>

  <distributionManagement>
    <repository>
      <id>unidata-releases</id>
      <name>UNIDATA Releases</name>
      <url>https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases/</url>
    </repository>
    <snapshotRepository>
      <id>unidata-snapshots</id>
      <name>UNIDATA Snapshots</name>
      <url>https://artifacts.unidata.ucar.edu/content/repositories/unidata-snapshots/</url>
    </snapshotRepository>
  </distributionManagement>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- dependency> <groupId>edu.ucar</groupId> <artifactId>netcdf</artifactId>
      <version>4.3.11-SNAPSHOT</version> </dependency -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${javax.servlet.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Introduces a cycle... -->
    <dependency>
      <groupId>edu.ucar</groupId>
      <artifactId>tds</artifactId>
      <version>4.4.0-SNAPSHOT</version>
      <classifier>classes</classifier>
      <type>jar</type>
      <scope>provided</scope>
    </dependency>

    <!-- dependency> <groupId>edu.ucar</groupId> <artifactId>netcdf</artifactId>
      <version>4.3.11-SNAPSHOT</version> <type>jar</type> <scope>provided</scope>
      </dependency -->

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>

    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>saxon</artifactId>
      <version>${saxon.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${org.slf4j.version}</version>
    </dependency>
  </dependencies>


  <profiles>
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <resources>
          <resource>
            <directory>src/main/resources/dev</directory>
          </resource>
          <resource>
            <directory>src/main/resources/xsl/nciso</directory>
            <targetPath>resources/xsl/nciso</targetPath>
          </resource>
        </resources>
      </build>
    </profile>
    <profile>
      <id>prod</id>
      <build>
        <resources>
          <resource>
            <directory>src/main/resources/prod</directory>
          </resource>
          <resource>
            <directory>src/main/resources/xsl/nciso</directory>
            <targetPath>resources/xsl/nciso</targetPath>
          </resource>
        </resources>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <!-- The most recent xslts are much smaller meaning that Xalan 2.7.1 is
        not currently needed However, allowing for flexibility that they may grow
        in size again we leave them in the pom for now. <plugin> <artifactId>maven-assembly-plugin</artifactId>
        <configuration> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef>
        </descriptorRefs> </configuration> <executions> <execution> <id>make-assembly</id>
        <phase>package</phase> <goals> <goal>single</goal> </goals> </execution>
        </executions> </plugin> -->
      <plugin>
        <!-- Separates the unit tests from the integration tests. -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <!-- Skip the default running of this plug-in (or everything is run
            twice...see below) -->
          <skip>${skipTests}</skip>
          <!-- Skipping tests at all -->
          <skipTests>true</skipTests>
          <!-- Show 100% of the lines from the stack trace (doesn't work) -->
          <trimStackTrace>false</trimStackTrace>
        </configuration>
        <executions>
          <execution>
            <id>unit-tests</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <!-- Never skip running the tests when the test phase is invoked -->
              <skip>false</skip>
              <includes>
                <!-- Include unit tests within integration-test phase. -->
                <include>**/*Tests.java</include>
              </includes>
              <excludes>
                <!-- Exclude integration tests within (unit) test phase. -->
                <exclude>**/*IntegrationTests.java</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>integration-tests</id>
            <phase>integration-test</phase>

            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <!-- Never skip running the tests when the integration-test phase
                is invoked -->
              <skip>false</skip>
              <includes>
                <!-- Include integration tests within integration-test phase. -->
                <include>**/*IntegrationTests.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${maven-antrun-plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.1.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>

  </build>

  <properties>
    <!-- default is to skip tests. use mvn test -DskipTests=false to override on command line -->
    <skipTests>true</skipTests>

    <!-- Source character encoding (different plug-ins use different sourceEncoding properties) -->
    <sourceEncoding>UTF-8</sourceEncoding>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <javax.servlet.version>3.0.1</javax.servlet.version>
    <javax.servlet.jstl.version>1.2</javax.servlet.jstl.version>
    <junit.version>4.11</junit.version>
    <log4j.version>2.0-beta8</log4j.version>
    <net.jcip.version>1.0</net.jcip.version>

    <org.slf4j.version>1.7.5</org.slf4j.version>
    <org.springframework.version>3.2.2.RELEASE</org.springframework.version>
    <org.springframework.security.version>3.1.3.RELEASE</org.springframework.security.version>
    <saxon.version>8.7</saxon.version>

    <!-- Plugins versions -->
    <maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
    <maven-assembly-plugin.version>2.4</maven-assembly-plugin.version>
    <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
    <maven-deploy-plugin.version>2.7</maven-deploy-plugin.version>
    <maven-javadoc-plugin.version>2.9.1</maven-javadoc-plugin.version>
    <maven-jar-plugin.version>2.4</maven-jar-plugin.version>
    <maven-release-plugin.version>2.4.1</maven-release-plugin.version>
    <maven-shade-plugin.version>2.1</maven-shade-plugin.version>
    <maven-surefire-plugin.version>2.16</maven-surefire-plugin.version>
    <maven-war-plugin.version>2.4</maven-war-plugin.version>


  </properties>
</project>